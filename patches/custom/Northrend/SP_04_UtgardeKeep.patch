diff --git a/scripts/northrend/utgarde_keep/utgarde_keep/boss_ingvar.cpp b/scripts/northrend/utgarde_keep/utgarde_keep/boss_ingvar.cpp
index 4b5f6ed..b860228 100644
--- a/scripts/northrend/utgarde_keep/utgarde_keep/boss_ingvar.cpp
+++ b/scripts/northrend/utgarde_keep/utgarde_keep/boss_ingvar.cpp
@@ -69,9 +69,18 @@ enum
     SPELL_SCOURGE_RES_SUMMON    = 42863,                    //summones a dummy target
     SPELL_SCOURGE_RES_HEAL      = 42704,                    //heals max HP
     SPELL_SCOURGE_RES_BUBBLE    = 42862,                    //black bubble
-    SPELL_SCOURGE_RES_CHANNEL   = 42857                     //the whirl from annhylde
+    SPELL_SCOURGE_RES_CHANNEL   = 42857,                    //the whirl from annhylde
+
+    SPELL_SUMMON_BANSHEE                        = 42912,
+    SPELL_SCOURG_RESURRECTION_EFFEKTSPAWN       = 42863, //Spawn resurrecteffekt around Ingvar
+
+    ACHIEV_UK                      = 477,
+    ACHIEV_UK_H                    = 489,
 };
 
+#define MODEL_INGVAR_UNDEAD                         26351
+#define MODEL_INGVAR_HUMAN                          21953
+
 /*######
 ## boss_ingvar
 ######*/
@@ -89,20 +98,32 @@ struct MANGOS_DLL_DECL boss_ingvarAI : public ScriptedAI
     bool m_bIsRegularMode;
 
     bool m_bIsResurrected;
+    bool event_inProgress;
 
     uint32 m_uiCleaveTimer;
     uint32 m_uiSmashTimer;
     uint32 m_uiStaggeringRoarTimer;
     uint32 m_uiEnrageTimer;
+    uint32 SpawnResTimer;
+    uint32 wait_Timer;
 
     void Reset()
     {
         m_bIsResurrected = false;
+        event_inProgress = false;
+        if(m_bIsResurrected) // Visual Hack
+            m_creature->SetUInt32Value(UNIT_FIELD_DISPLAYID, MODEL_INGVAR_HUMAN);
 
         m_uiCleaveTimer = urand(5000, 7000);
         m_uiSmashTimer = urand(8000, 15000);
         m_uiStaggeringRoarTimer = urand(10000, 25000);
         m_uiEnrageTimer = 30000;
+
+        if(m_pInstance)
+            m_pInstance->SetData(TYPE_INGVAR, NOT_STARTED);
+
+        SpawnResTimer = 3000;
+        wait_Timer = 0;
     }
 
     void Aggro(Unit* pWho)
@@ -110,28 +131,68 @@ struct MANGOS_DLL_DECL boss_ingvarAI : public ScriptedAI
         DoScriptText(m_bIsResurrected ? SAY_AGGRO_SECOND : SAY_AGGRO_FIRST, m_creature);
     }
 
-    //this need to be done when spell works
-    /*void DamageTaken(Unit* pDoneBy, uint32 &uiDamage)
+    void DamageTaken(Unit *done_by, uint32 &damage)
     {
-        if (m_bIsResurrected)
-            return;
-
-        if (uiDamage >= m_creature->GetHealth())
+        if( damage >= m_creature->GetHealth() && !m_bIsResurrected)
         {
-            uiDamage = m_creature->GetHealth() -1;
-
-            m_creature->GetMotionMaster()->Clear(false);
+            //DoCast(m_creature,SPELL_FEIGN_DEATH,true);  // Dont work ???
+            // visuel hack
+            m_creature->SetHealth(0);
+            m_creature->InterruptNonMeleeSpells(true);
+            m_creature->RemoveAllAuras();
+            m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE);
+            m_creature->GetMotionMaster()->MovementExpired(false);
             m_creature->GetMotionMaster()->MoveIdle();
+            m_creature->SetStandState(UNIT_STAND_STATE_DEAD);
+            // visuel hack end
+            
+            event_inProgress = true;
+            m_bIsResurrected = true;
 
-            DoScriptText(SAY_DEATH_FIRST, m_creature);
+            DoScriptText(SAY_DEATH_FIRST,m_creature);
+        }
 
-            m_creature->CastSpell(m_creature, SPELL_FEIGN_DEATH, true);
+        if(event_inProgress)
+        {
+            damage = 0;
         }
-    }*/
+    }
+
+    void StartZombiePhase()
+    {
+        m_bIsResurrected = true;
+        event_inProgress = false;
+        m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE);
+        m_creature->GetMotionMaster()->MoveChase(m_creature->getVictim());
+        m_creature->AI()->AttackStart(m_creature->getVictim());
+
+        DoScriptText(SAY_AGGRO_SECOND,m_creature);
+    }
 
     void JustDied(Unit* pKiller)
     {
         DoScriptText(SAY_DEATH_SECOND, m_creature);
+
+        if (m_pInstance && m_pInstance->GetData(TYPE_KELESETH) == DONE && m_pInstance->GetData(TYPE_DALRONN) == DONE)
+        {
+            m_pInstance->SetData(TYPE_INGVAR, DONE);
+
+            // Complete achiev for Ingvar
+            Map* pMap = m_creature->GetMap();
+            AchievementEntry const *Achiev = GetAchievementStore()->LookupEntry(m_bIsRegularMode ? ACHIEV_UK : ACHIEV_UK_H);
+            if(Achiev && pMap)
+            {
+                Map::PlayerList const &lPlayers = pMap->GetPlayers();
+                if (!lPlayers.isEmpty())
+                {
+                    for(Map::PlayerList::const_iterator itr = lPlayers.begin(); itr != lPlayers.end(); ++itr)
+                    {
+                        if (Player* pPlayer = itr->getSource())
+                            pPlayer->CompletedAchievement(Achiev);
+                    }
+                }
+            }
+        }
     }
 
     void KilledUnit(Unit* pVictim)
@@ -145,42 +206,97 @@ struct MANGOS_DLL_DECL boss_ingvarAI : public ScriptedAI
         if (!m_creature->SelectHostileTarget() || !m_creature->getVictim())
             return;
 
-        if (!m_bIsResurrected)
+        if(event_inProgress)
         {
-            if (m_uiCleaveTimer < uiDiff)
+            if(SpawnResTimer)
+                if(SpawnResTimer< uiDiff)
+                {
+                    DoCast(m_creature,SPELL_SUMMON_BANSHEE); // Summons direktly on caster position
+                    //DoCast(m_creature,SPELL_SCOURG_RESURRECTION_EFFEKTSPAWN); // Dont needet ?
+                    SpawnResTimer = 0;
+                }else SpawnResTimer -= uiDiff;
+
+            return;
+        }
+
+        // This is used for a spell queue ... the spells should not castet if one spell is already casting
+        if(wait_Timer)
+            if(wait_Timer < uiDiff)
             {
-                DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
-                m_uiCleaveTimer = urand(2500, 7000);
-            }
-            else
-                m_uiCleaveTimer -= uiDiff;
+                wait_Timer = 0;
+            }else wait_Timer -= uiDiff;
 
-            if (m_uiSmashTimer < uiDiff)
+        if(m_uiCleaveTimer < uiDiff)
+        {
+            if(!wait_Timer)
             {
-                DoCastSpellIfCan(m_creature, m_bIsRegularMode ? SPELL_SMASH : SPELL_SMASH_H);
-                m_uiSmashTimer = urand(8000, 15000);
+                if(m_bIsResurrected)
+                    DoCast(m_creature->getVictim(), m_bIsResurrected ? SPELL_WOE_STRIKE : SPELL_WOE_STRIKE_H);
+                else
+                    DoCastSpellIfCan(m_creature->getVictim(), SPELL_CLEAVE);
+                m_uiCleaveTimer = urand(2500, 7000);
+                wait_Timer = 1000;
             }
-            else
-                m_uiSmashTimer -= uiDiff;
+        }else m_uiCleaveTimer -= uiDiff;
 
-            if (m_uiStaggeringRoarTimer < uiDiff)
+        if(m_uiSmashTimer < uiDiff)
+        {
+            if(!wait_Timer)
             {
-                DoScriptText(EMOTE_ROAR, m_creature);
-                DoCastSpellIfCan(m_creature, m_bIsRegularMode ? SPELL_STAGGERING_ROAR : SPELL_STAGGERING_ROAR_H);
-                m_uiStaggeringRoarTimer = urand(15000, 30000);
+                if(m_bIsResurrected)
+                    DoCast(m_creature->getVictim(), SPELL_DARK_SMASH_H);
+                else
+                    DoCastSpellIfCan(m_creature, m_bIsRegularMode ? SPELL_SMASH : SPELL_SMASH_H);
+                m_uiSmashTimer = urand(8000, 15000);
+                wait_Timer = 5000;
             }
-            else
-                m_uiStaggeringRoarTimer -= uiDiff;
+        }else m_uiSmashTimer -= uiDiff;
 
-            if (m_uiEnrageTimer < uiDiff)
+        if(!m_bIsResurrected)
+        {
+            if(m_uiEnrageTimer < uiDiff)
             {
                 DoCastSpellIfCan(m_creature, m_bIsRegularMode ? SPELL_ENRAGE : SPELL_ENRAGE_H);
                 m_uiEnrageTimer = urand(10000, 20000);
             }
-            else
-                m_uiEnrageTimer -= uiDiff;
+            else m_uiEnrageTimer -= uiDiff;
+        }
+        // In Undead form used to summon weapon
+        else 
+        {
+            if(m_uiEnrageTimer < uiDiff)
+            {
+                if(!wait_Timer)
+                {
+                    // Spawn target for Axe
+                    Unit* target = SelectUnit(SELECT_TARGET_TOPAGGRO, 1);
+                    if(target)
+                    {
+                        Creature* temp = m_creature->SummonCreature(NPC_THROW_TARGET,target->GetPositionX(),target->GetPositionY(),target->GetPositionZ(),0,TEMPSUMMON_TIMED_DESPAWN,2000);
+                        DoCast(m_creature,SPELL_SHADOW_AXE);
+                    }
+                    m_uiEnrageTimer = 30000;
+                }
+            }else m_uiEnrageTimer -= uiDiff;
         }
 
+
+        if(m_uiStaggeringRoarTimer < uiDiff)
+        {
+            if(!wait_Timer)
+            {
+                if(m_bIsResurrected)
+                    DoCast(m_creature,m_bIsRegularMode ? SPELL_DREADFUL_ROAR : SPELL_DREADFUL_ROAR_H);
+                else
+                {
+                    DoScriptText(EMOTE_ROAR, m_creature);
+                    DoCastSpellIfCan(m_creature, m_bIsRegularMode ? SPELL_STAGGERING_ROAR : SPELL_STAGGERING_ROAR_H);
+                }
+                m_uiStaggeringRoarTimer = urand(15000, 30000);
+                wait_Timer = 5000;
+            }
+        }else m_uiStaggeringRoarTimer -= uiDiff;
+
         DoMeleeAttackIfReady();
     }
 };
@@ -193,6 +309,13 @@ CreatureAI* GetAI_boss_ingvar(Creature* pCreature)
 /*######
 ## npc_annhylde
 ######*/
+#define SAY_RESSURECT                       -1999524
+
+//Spells for Annhylde
+#define SPELL_SCOURG_RESURRECTION_HEAL              42704 //Heal Max + DummyAura
+#define SPELL_SCOURG_RESURRECTION_BEAM              42857 //Channeling Beam of Annhylde
+#define SPELL_SCOURG_RESURRECTION_DUMMY             42862 //Some Emote Dummy?
+#define SPELL_INGVAR_TRANSFORM                      42796
 
 struct MANGOS_DLL_DECL npc_annhyldeAI : public ScriptedAI
 {
@@ -203,15 +326,93 @@ struct MANGOS_DLL_DECL npc_annhyldeAI : public ScriptedAI
         Reset();
     }
 
+    float x,y,z;
     ScriptedInstance* m_pInstance;
     bool m_bIsRegularMode;
 
+    uint32 Resurect_Timer;
+    uint32 Resurect_Phase;
+
     void Reset()
     {
+        m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE);
+        m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+
+        m_creature->SetSplineFlags(SPLINEFLAG_FLYING);
+        m_creature->SetSpeedRate(MOVE_FLIGHT , 1.0f);
+
+        m_creature->GetPosition(x,y,z);
+        DoTeleportPlayer(m_creature, x+1, y, z+30, m_creature->GetOrientation());
+        Unit* ingvar = Unit::GetUnit((*m_creature), m_pInstance->GetData64(DATA_INGVAR));
+        if(ingvar)
+        {
+            m_creature->GetMotionMaster()->MovePoint(1,x,y,z+15);
+
+            DoScriptText(SAY_RESSURECT,m_creature);
+        }
     }
 
-    void UpdateAI(const uint32 uiDiff)
+    void MovementInform(uint32 type, uint32 id)
     {
+        if(type != POINT_MOTION_TYPE)
+            return;
+        Unit* ingvar = Unit::GetUnit((*m_creature), m_pInstance->GetData64(DATA_INGVAR));
+        if(ingvar)
+        {
+            switch (id)
+            {
+            case 1:
+                ingvar->RemoveAura(SPELL_SUMMON_BANSHEE,EFFECT_INDEX_1);
+                ingvar->CastSpell(ingvar,SPELL_SCOURG_RESURRECTION_DUMMY,true);
+                DoCast(ingvar,SPELL_SCOURG_RESURRECTION_BEAM);
+                Resurect_Timer = 8000;
+                Resurect_Phase = 1;
+                break;
+            case 2:
+                m_creature->DealDamage(m_creature,m_creature->GetHealth(), NULL, DIRECT_DAMAGE, SPELL_SCHOOL_MASK_NORMAL, NULL, false);
+                m_creature->RemoveCorpse();
+                break;
+            }
+        }
+    }
+
+    void AttackStart(Unit* who) {}
+    void MoveInLineOfSight(Unit* who) {}
+    void Aggro(Unit *who) {}
+    void UpdateAI(const uint32 diff)
+    {
+        //if(Resurect_Timer)
+            if(Resurect_Timer < diff)
+            {
+                if(Resurect_Phase == 1)
+                {
+                    Unit* ingvar = Unit::GetUnit((*m_creature), m_pInstance->GetData64(DATA_INGVAR));
+                    if(ingvar)
+                    {
+                        ingvar->SetStandState(UNIT_STAND_STATE_STAND);
+                        ingvar->CastSpell(ingvar,SPELL_SCOURG_RESURRECTION_HEAL,false);
+                        ingvar->SetHealth(ingvar->GetMaxHealth());
+                    }
+                    Resurect_Timer = 3000;
+                    Resurect_Phase = 2;
+                }else if (Resurect_Phase == 2)
+                {
+                    Unit* ingvar = Unit::GetUnit((*m_creature), m_pInstance->GetData64(DATA_INGVAR));
+                    if(ingvar)
+                    {
+                        ingvar->RemoveAurasDueToSpell(SPELL_SCOURG_RESURRECTION_DUMMY);
+                        ingvar->CastSpell(ingvar,SPELL_INGVAR_TRANSFORM,false);
+                        ingvar->SetUInt32Value(UNIT_FIELD_DISPLAYID, MODEL_INGVAR_UNDEAD); // Visual Hack - when he dies he becomes human model -> wrong
+                        Creature* c_ingvar = (Creature*)ingvar;
+
+                        ((boss_ingvarAI*)(c_ingvar->AI()))->StartZombiePhase();
+
+                        m_creature->GetMotionMaster()->MovePoint(2,x+1,y,z+30);
+                        Resurect_Phase++;
+                    }
+                }
+                
+            }else Resurect_Timer -= diff;
     }
 };
 
@@ -220,6 +421,47 @@ CreatureAI* GetAI_npc_annhylde(Creature* pCreature)
     return new npc_annhyldeAI(pCreature);
 }
 
+struct MANGOS_DLL_DECL mob_ingvar_throw_dummyAI : public ScriptedAI
+{
+    mob_ingvar_throw_dummyAI(Creature *pCreature) : ScriptedAI(pCreature)
+    {
+        m_bIsRegularMode = pCreature->GetMap()->IsRegularDifficulty();
+    }
+
+    bool m_bIsRegularMode;
+    uint32 Despawn_Timer;
+
+    void Reset()
+    {
+        Unit *pTarget = GetClosestCreatureWithEntry(m_creature, NPC_THROW_TARGET,50);
+        if (pTarget)
+        {
+            DoCast(m_creature, m_bIsRegularMode ? SPELL_SHADOW_AXE_PROC : SPELL_SHADOW_AXE_PROC_H);
+            float x,y,z;
+            pTarget->GetPosition(x,y,z);
+            m_creature->GetMotionMaster()->MovePoint(0,x,y,z);
+        }
+        Despawn_Timer = 7000;
+    }
+    void AttackStart(Unit* who) {}
+    void MoveInLineOfSight(Unit* who) {}
+    void EnterCombat(Unit *who) {}
+    void UpdateAI(const uint32 diff)
+    {
+        if (Despawn_Timer <= diff)
+        {
+            m_creature->DealDamage(m_creature,m_creature->GetHealth(), NULL, DIRECT_DAMAGE, SPELL_SCHOOL_MASK_NORMAL, NULL, false);
+            m_creature->RemoveCorpse();
+            Despawn_Timer = 0;
+        } else Despawn_Timer -= diff;
+    }
+};
+
+CreatureAI* GetAI_mob_ingvar_throw_dummy(Creature* pCreature)
+{
+    return new mob_ingvar_throw_dummyAI (pCreature);
+}
+
 void AddSC_boss_ingvar()
 {
     Script *newscript;
@@ -233,4 +475,9 @@ void AddSC_boss_ingvar()
     newscript->Name = "npc_annhylde";
     newscript->GetAI = &GetAI_npc_annhylde;
     newscript->RegisterSelf();
+
+    newscript = new Script;
+    newscript->Name = "mob_ingvar_throw_dummy";
+    newscript->GetAI = &GetAI_mob_ingvar_throw_dummy;
+    newscript->RegisterSelf();
 }
diff --git a/scripts/northrend/utgarde_keep/utgarde_keep/boss_keleseth.cpp b/scripts/northrend/utgarde_keep/utgarde_keep/boss_keleseth.cpp
index 9221bf0..ac4cd50 100644
--- a/scripts/northrend/utgarde_keep/utgarde_keep/boss_keleseth.cpp
+++ b/scripts/northrend/utgarde_keep/utgarde_keep/boss_keleseth.cpp
@@ -46,7 +46,9 @@ enum
     SPELL_BONE_ARMOR        = 59386,                        // casted on boss, heroic only
 
     NPC_FROST_TOMB          = 23965,
-    NPC_VRYKUL_SKELETON     = 23970
+    NPC_VRYKUL_SKELETON     = 23970,
+
+    ACHIEVEMENT_ON_THE_ROCKS    = 1919,
 };
 
 const float RUN_DISTANCE = 20.0;
@@ -210,6 +212,9 @@ struct MANGOS_DLL_DECL boss_kelesethAI : public ScriptedAI
         m_uiShadowboltTimer = 0;
 
         DespawnAdds();
+
+        if(m_pInstance)
+            m_pInstance->SetData(TYPE_KELESETH, NOT_STARTED);
     }
 
     void AttackStart(Unit* pWho)
@@ -227,6 +232,9 @@ struct MANGOS_DLL_DECL boss_kelesethAI : public ScriptedAI
     void Aggro(Unit* pWho)
     {
         DoScriptText(SAY_AGGRO, m_creature);
+
+        if(m_pInstance)
+            m_pInstance->SetData(TYPE_KELESETH, IN_PROGRESS);
     }
 
     void SummonAdds()
@@ -257,6 +265,9 @@ struct MANGOS_DLL_DECL boss_kelesethAI : public ScriptedAI
     void JustDied(Unit* pKiller)
     {
         DoScriptText(SAY_DEATH, m_creature);
+
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_KELESETH, DONE);
     }
 
     void KilledUnit(Unit* pVictim)
diff --git a/scripts/northrend/utgarde_keep/utgarde_keep/boss_skarvald_and_dalronn.cpp b/scripts/northrend/utgarde_keep/utgarde_keep/boss_skarvald_and_dalronn.cpp
index 43a4b13..b110eb3 100644
--- a/scripts/northrend/utgarde_keep/utgarde_keep/boss_skarvald_and_dalronn.cpp
+++ b/scripts/northrend/utgarde_keep/utgarde_keep/boss_skarvald_and_dalronn.cpp
@@ -96,7 +96,11 @@ struct MANGOS_DLL_DECL boss_s_and_d_dummyAI : public ScriptedAI
         return m_pInstance->instance->GetCreature(m_pInstance->GetData64(m_creature->GetEntry() == NPC_DALRONN ? NPC_SKARVALD : NPC_DALRONN));
     }
 
-    void Reset() { }
+    void Reset() 
+    { 
+        if(m_pInstance)
+            m_pInstance->SetData(TYPE_DALRONN, NOT_STARTED);
+    }
 
     void JustReachedHome()
     {
@@ -125,6 +129,9 @@ struct MANGOS_DLL_DECL boss_s_and_d_dummyAI : public ScriptedAI
         }
 
         Aggro(pWho);
+
+        if(m_pInstance)
+            m_pInstance->SetData(TYPE_DALRONN, IN_PROGRESS);
     }
 
     void JustSummoned(Creature* pSummoned)
@@ -160,6 +167,9 @@ struct MANGOS_DLL_DECL boss_s_and_d_dummyAI : public ScriptedAI
                 pBuddy->SetFlag(UNIT_DYNAMIC_FLAGS, UNIT_DYNFLAG_LOOTABLE);
             }
         }
+
+        if (m_pInstance)
+            m_pInstance->SetData(TYPE_DALRONN, DONE);
     }
 };
 
diff --git a/scripts/northrend/utgarde_keep/utgarde_keep/instance_utgarde_keep.cpp b/scripts/northrend/utgarde_keep/utgarde_keep/instance_utgarde_keep.cpp
index 0f9f9ee..6225a24 100644
--- a/scripts/northrend/utgarde_keep/utgarde_keep/instance_utgarde_keep.cpp
+++ b/scripts/northrend/utgarde_keep/utgarde_keep/instance_utgarde_keep.cpp
@@ -34,6 +34,7 @@ struct MANGOS_DLL_DECL instance_utgarde_keep : public ScriptedInstance
     uint64 m_uiKelesethGUID;
     uint64 m_uiSkarvaldGUID;
     uint64 m_uiDalronnGUID;
+    uint64 m_uiIngvarGUID;
 
     uint64 m_uiBellow1GUID;
     uint64 m_uiBellow2GUID;
@@ -42,6 +43,11 @@ struct MANGOS_DLL_DECL instance_utgarde_keep : public ScriptedInstance
     uint64 m_uiForgeFire2GUID;
     uint64 m_uiForgeFire3GUID;
 
+    uint64 m_uiEntranceDoorGUID;
+    uint64 m_uiKelesethDoorGUID;
+    uint64 m_uiIngvarDoorGUID;
+    uint64 m_uiExitDoorGUID;
+
     void Initialize()
     {
         memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
@@ -49,6 +55,7 @@ struct MANGOS_DLL_DECL instance_utgarde_keep : public ScriptedInstance
         m_uiKelesethGUID = 0;
         m_uiSkarvaldGUID = 0;
         m_uiDalronnGUID = 0;
+        m_uiIngvarGUID  = 0;
 
         m_uiBellow1GUID = 0;
         m_uiBellow2GUID = 0;
@@ -56,6 +63,10 @@ struct MANGOS_DLL_DECL instance_utgarde_keep : public ScriptedInstance
         m_uiForgeFire1GUID = 0;
         m_uiForgeFire2GUID = 0;
         m_uiForgeFire3GUID = 0;
+        m_uiEntranceDoorGUID = 0;
+        m_uiKelesethDoorGUID = 0;
+        m_uiIngvarDoorGUID  = 0;
+        m_uiExitDoorGUID    = 0;
     }
 
     void OnCreatureCreate(Creature* pCreature)
@@ -65,6 +76,7 @@ struct MANGOS_DLL_DECL instance_utgarde_keep : public ScriptedInstance
             case NPC_KELESETH: m_uiKelesethGUID = pCreature->GetGUID(); break;
             case NPC_SKARVALD: m_uiSkarvaldGUID = pCreature->GetGUID(); break;
             case NPC_DALRONN: m_uiDalronnGUID = pCreature->GetGUID(); break;
+            case NPC_INGVAR: m_uiIngvarGUID = pCreature->GetGUID(); break;
         }
     }
 
@@ -102,9 +114,43 @@ struct MANGOS_DLL_DECL instance_utgarde_keep : public ScriptedInstance
                 if (m_auiEncounter[2] == DONE)
                     pGo->SetGoState(GO_STATE_ACTIVE);
                 break;
+            case DOOR_ENTRANCE:
+                m_uiEntranceDoorGUID = pGo->GetGUID();
+                if (m_auiEncounter[2] == DONE)
+                    pGo->SetGoState(GO_STATE_ACTIVE);
+                break;
+            case DOOR_EXIT:
+                m_uiExitDoorGUID = pGo->GetGUID();
+                if (m_auiEncounter[2] == DONE)
+                    pGo->SetGoState(GO_STATE_ACTIVE);
+                break;
+            case DOOR_KELESETH:
+                m_uiKelesethDoorGUID = pGo->GetGUID();
+                if (m_auiEncounter[0] == DONE)
+                    pGo->SetGoState(GO_STATE_ACTIVE);
+                break;
+            case DOOR_INGVAR:
+                m_uiIngvarDoorGUID = pGo->GetGUID();
+                if (m_auiEncounter[2] == DONE)
+                    pGo->SetGoState(GO_STATE_ACTIVE);
+                break;
         }
     }
 
+    void OpenDoor(uint64 guid)
+    {
+        if(!guid) return;
+        GameObject* pGo = instance->GetGameObject(guid);
+        if(pGo) pGo->SetGoState(GO_STATE_ACTIVE);
+    }
+
+    void CloseDoor(uint64 guid)
+    {
+        if(!guid) return;
+        GameObject* pGo = instance->GetGameObject(guid);
+        if(pGo) pGo->SetGoState(GO_STATE_READY);
+    }
+
     void SetData(uint32 uiType, uint32 uiData)
     {
         switch(uiType)
@@ -118,6 +164,31 @@ struct MANGOS_DLL_DECL instance_utgarde_keep : public ScriptedInstance
             case GO_BELLOW_3:
                 m_auiEncounter[2] = uiData;
                 break;
+            case TYPE_KELESETH:
+                m_auiEncounter[0] = uiData;
+                break;
+            case TYPE_DALRONN:
+                if (uiData == DONE)
+                    OpenDoor(m_uiKelesethDoorGUID);
+                if (uiData == NOT_STARTED)
+                    OpenDoor(m_uiKelesethDoorGUID);
+                if (uiData == IN_PROGRESS)
+                    CloseDoor(m_uiKelesethDoorGUID);
+                m_auiEncounter[1] = uiData;
+                break;
+            case TYPE_INGVAR:
+                if (uiData == DONE)
+                {
+                    DoUseDoorOrButton(m_uiIngvarDoorGUID);
+                    DoUseDoorOrButton(m_uiExitDoorGUID);
+                    DoUseDoorOrButton(m_uiEntranceDoorGUID);
+                }
+                if (uiData == IN_PROGRESS)
+                    CloseDoor(m_uiIngvarDoorGUID);
+                if (uiData == NOT_STARTED)
+                    OpenDoor(m_uiIngvarDoorGUID);
+                m_auiEncounter[2] = uiData;
+                break;
         }
 
         if (uiData == DONE)
@@ -139,6 +210,20 @@ struct MANGOS_DLL_DECL instance_utgarde_keep : public ScriptedInstance
         return strInstData.c_str();
     }
 
+    uint32 GetData(uint32 uiType)
+    {
+        switch(uiType)
+        {
+            case TYPE_KELESETH:
+                return m_auiEncounter[0];
+            case TYPE_DALRONN:
+                return m_auiEncounter[1];
+            case TYPE_INGVAR:
+                return m_auiEncounter[2];
+        }
+        return 0;
+    }
+
     uint64 GetData64(uint32 uiData)
     {
         switch(uiData)
diff --git a/scripts/northrend/utgarde_keep/utgarde_keep/utgarde_keep.h b/scripts/northrend/utgarde_keep/utgarde_keep/utgarde_keep.h
index fb91b7e..5cd6806 100644
--- a/scripts/northrend/utgarde_keep/utgarde_keep/utgarde_keep.h
+++ b/scripts/northrend/utgarde_keep/utgarde_keep/utgarde_keep.h
@@ -9,10 +9,22 @@ enum
 {
     MAX_ENCOUNTER               = 3,
 
+    TYPE_KELESETH               = 1,
+    TYPE_DALRONN                = 2,
+    TYPE_INGVAR                 = 3,
+
+    DATA_INGVAR                 = 4,
+
     //also using these as identifier for Set/GetData(), unlike normal naming
     NPC_KELESETH                = 23953,
     NPC_SKARVALD                = 24200,
     NPC_DALRONN                 = 24201,
+    NPC_INGVAR                  = 23954,
+
+    DOOR_ENTRANCE               = 186756,
+    DOOR_EXIT                   = 186694,
+    DOOR_KELESETH               = 186608, 
+    DOOR_INGVAR                 = 186612,
 
     GO_BELLOW_1                 = 186688,
     GO_BELLOW_2                 = 186689,
diff --git a/sql/Custom_Updates/Mangos/Northrend/UtgardeKeep_Mangos.sql b/sql/Custom_Updates/Mangos/Northrend/UtgardeKeep_Mangos.sql
new file mode 100644
index 0000000..e66eb4a
--- /dev/null
+++ b/sql/Custom_Updates/Mangos/Northrend/UtgardeKeep_Mangos.sql
@@ -0,0 +1,3 @@
+/* UTGARDE KEEP */
+-- Utgarde Doors
+UPDATE `gameobject_template` SET `faction` = 114, `data0` = '0' where `entry` in (186756, 186694, 186608, 186612);
\ No newline at end of file
