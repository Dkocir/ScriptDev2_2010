diff --git a/src/game/Player.cpp b/src/game/Player.cpp
index d243729..639ad0d 100644
--- a/src/game/Player.cpp
+++ b/src/game/Player.cpp
@@ -18923,7 +18923,11 @@ void Player::AddSpellAndCategoryCooldowns(SpellEntry const* spellInfo, uint32 it
         // shoot spells used equipped item cooldown values already assigned in GetAttackTime(RANGED_ATTACK)
         // prevent 0 cooldowns set by another way
         if (rec <= 0 && catrec <= 0 && (cat == 76 || IsAutoRepeatRangedSpell(spellInfo) && spellInfo->Id != SPELL_ID_AUTOSHOT))
+		{
             rec = GetAttackTime(RANGED_ATTACK);
+            if(spellInfo->Id == 5019)
+                ProhibitSpellSchool(SPELL_SCHOOL_MASK_MAGIC, rec);//gkd
+        }
 
         // Now we have cooldown data (if found any), time to apply mods
         if(rec > 0)
diff --git a/src/game/Spell.cpp b/src/game/Spell.cpp
index 17807a0..aca699d 100644
--- a/src/game/Spell.cpp
+++ b/src/game/Spell.cpp
@@ -3174,7 +3174,7 @@ void Spell::SendSpellCooldown()
     }
 
     // (1) have infinity cooldown but set at aura apply, (2) passive cooldown at triggering
-    if(m_spellInfo->Attributes & (SPELL_ATTR_DISABLED_WHILE_ACTIVE | SPELL_ATTR_PASSIVE))
+    if(m_spellInfo->Attributes & (SPELL_ATTR_DISABLED_WHILE_ACTIVE | SPELL_ATTR_PASSIVE) && m_spellInfo->Id != 5019)
         return;
 
     _player->AddSpellAndCategoryCooldowns(m_spellInfo, m_CastItem ? m_CastItem->GetEntry() : 0, this);
