diff --git a/src/game/Spell.cpp b/src/game/Spell.cpp
index d2e76a9..6a14229 100644
--- a/src/game/Spell.cpp
+++ b/src/game/Spell.cpp
@@ -1502,6 +1502,14 @@ void Spell::SetTargetMap(SpellEffectIndex effIndex, uint32 targetMode, UnitList&
                 case 25991:                                 // Poison Bolt Volley (Pincess Huhuran)
                     unMaxTargets = 15;
                     break;
+				case 62240:                                 // Solar Flare
+				case 62920:                                 // Solar Flare (h)
+					{
+						if(Aura *pAura = m_caster->GetAura(62251, EFFECT_INDEX_0))
+							unMaxTargets = pAura->GetStackAmount();
+						else unMaxTargets = 1;
+						break;
+					}
             }
             break;
         }
diff --git a/src/game/SpellEffects.cpp b/src/game/SpellEffects.cpp
index 94e0607..5c22885 100644
--- a/src/game/SpellEffects.cpp
+++ b/src/game/SpellEffects.cpp
@@ -1735,6 +1735,23 @@ void Spell::EffectDummy(SpellEffectIndex eff_idx)
                     m_caster->CastSpell(unitTarget,60934,true,NULL);
                     return;
                 }
+				case 62653:                                 // Tidal Wave - nonheroic version
+                {
+                    if(!unitTarget)
+                        return;
+
+                    m_caster->CastSpell(unitTarget, 62654, true);
+                    return;
+                }
+                case 62935:                                 // Tidal Wave - heroic version
+                {
+                    if(!unitTarget)
+                        return;
+
+                    m_caster->CastSpell(unitTarget, 62936, true);
+                    return;
+
+                }
                 case 67019:                                 // Flask of the North
                 {
                     if (m_caster->GetTypeId() != TYPEID_PLAYER)
@@ -6092,6 +6109,41 @@ void Spell::EffectScriptEffect(SpellEffectIndex eff_idx)
                     m_caster->CastSpell(unitTarget, 72588, true);
                     return;
                 }
+				case 62678: // Summon Allies of Nature
+                {
+                    uint32 spellId = 0;
+                    switch(urand(0,2))
+                    {
+                        case 0: spellId = 62688; break;
+                        case 1: spellId = 62686; break;
+                        case 2: spellId = 62685; break;
+                    }
+                    m_caster->CastSpell(m_caster, spellId, true);
+                    return;
+                }
+                case 62688: // Summon Wave - 10 Mob
+                {
+                    for(int8 i = 0; i < 12; i++)
+                        m_caster->CastSpell(m_caster, 62687, true);
+                    return;
+                }
+                case 62217:
+                case 62922: // Unstable Energy - Unstable Sun Beam remove part
+                {
+                    if(m_caster)
+                        m_caster->RemoveAurasDueToSpell(m_spellInfo->EffectBasePoints[eff_idx] + 1);
+                    return;
+                }
+                case 62262: // Brightleaf Flux
+                {
+                    if(!unitTarget)
+                        return;
+                    
+                    uint32 spellId = urand(0,1) ? 62251 : 62252;
+                    m_caster->CastSpell(unitTarget, spellId, true);
+					//if(Aura *pAura = unitTarget->GetAura(spellId, EFFECT_INDEX_0))
+                        //pAura->SetStackAmount(urand(1,8));
+                }
             }
             break;
         }
